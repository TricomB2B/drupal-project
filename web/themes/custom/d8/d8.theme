<?php
/**
 * THEME FUNCTIONS
 */

// return the URL to the given file (generally used for images in theme)
function d8_get_url ($path) {
  return file_create_url(drupal_get_path('theme', 'd8') . '/' . $path);
}

// add a standard viewport meta tag to the head of every document
// viewport meta tag is no longer required in drupal 8.
// this function is here as an example as well as to act as a stub
// for other page_attachments requirements
function d8_page_attachments (&$page) {
  $viewport = array(
    '#tag'        => 'meta',
    '#attributes' => array(
      'name'    => 'viewport',
      'content' => 'width=device-width,initial-scale=1.0',
    )
  );

  //$page['#attached']['html_head'][] = [$viewport, 'viewport'];
}

// inject relevant classes into the page class list
function d8_preprocess_html(&$variables) {
  // front page (required because of bug in Drupal)
  if (d8_is_front_page())
    $variables['attributes']['class'][] = 'front';

  // Add information about the number of sidebars
  if(!empty($variables['page']['sidebar_left']) && !empty($variables['page']['sidebar_right'])) {
      $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_left'])) {
      $variables['attributes']['class'][] = 'one-sidebar';
      $variables['attributes']['class'][] = 'sidebar-left';
  }
  elseif (!empty($variables['page']['sidebar_right'])) {
      $variables['attributes']['class'][] = 'one-sidebar';
      $variables['attributes']['class'][] = 'sidebar-right';
  }
  else {
      $variables['attributes']['class'][] = 'no-sidebars';
  }
}

// inject some flags into the page template
function d8_preprocess_page(&$variables) {
  // add is_front to the template, since isn't currently doing it
  $variables['is_front'] = FALSE;

  if (d8_is_front_page())
    $variables['is_front'] = TRUE;
}

// determine if the current page is the front page
function d8_is_front_page() {
  $config       = \Drupal::config('system.site');
  $front_path   = $config->get('page.front');
  $current_path = \Drupal::service('path.current')->getPath();

  return $front_path === $current_path;
}

// hooks into the HTML template suggestions to add a
// html--node--*content-type* suggestion.
function intel_theme_suggestions_html_alter (array &$suggestions, array $variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type  = $node->bundle();
    $suggestions[] = 'html__node__'.$content_type;
  }
}

// hooks into the PAGE template suggestions to add a
// page--node--*content-type* suggestion.
function intel_theme_suggestions_page_alter (array &$suggestions, array $variables) {

  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $content_type  = $node->bundle();
    $suggestions[] = 'page__node__'.$content_type;
  }
}

